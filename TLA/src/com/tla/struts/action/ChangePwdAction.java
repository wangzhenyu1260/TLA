/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.tla.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.tla.domain.Secretary;
import com.tla.domain.Teachingassistant;
import com.tla.service.imp.UsersServiceImp;
import com.tla.service.inter.UsersServiceInter;
import com.tla.struts.form.ChangePwdForm;
import com.tla.domain.Teacher;

/** 
 * MyEclipse Struts
 * Creation date: 05-20-2015
 * 
 * XDoclet definition:
 * @struts.action path="/changePwd" name="changePwdForm" parameter="flag" scope="request"
 */
public class ChangePwdAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward goPwdUi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if (request.getSession().getAttribute("role").equals("secretary")) {
			//go to secretary main page
			// load data
			// redirection
			return mapping.findForward("goSecretaryProfileUi");

		} else if (request.getSession().getAttribute("role").equals("teacher")) {
			// go to teacher main page
			// load data
			// redirection
			return mapping.findForward("goTeacherProfileUi");

		} else if (request.getSession().getAttribute("role").equals("ta")) {
			// go to TA main page
			// load data
			// redirection
			return mapping.findForward("goTaProfileUi");

		} else {
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}
	
	/**
	 * change password
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward changePwd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ChangePwdForm changePwdForm = (ChangePwdForm) form;
		String role = (String) request.getSession().getAttribute("role");

		String oldPwd = changePwdForm.getOldPwd();
		String newPwd = changePwdForm.getNewPwd();
		
		if (role.equals("secretary")) {

			Secretary secretary = (Secretary) request.getSession().getAttribute("secretaryinfo");
			if (oldPwd.equals(secretary.getPassword())) {
				if (oldPwd.equals(newPwd)) {
					request.setAttribute(
							"PwdError",
							"Your new password can't be the same as the original password. Please try again!");
					return mapping.findForward("goSecretaryProfileUi");
				} else {
					UsersServiceInter usersServiceInter = new UsersServiceImp();
					if (usersServiceInter.changePwd(role, newPwd,secretary.getId() + "")) {
						request.setAttribute("msg", "Your password has changed. Please login again!");
						return mapping.findForward("goLogin");
					} else {
						request.setAttribute("PwdError","Change password error!");
						return mapping.findForward("goSecretaryProfileUi");
					}
				}
			} else {
				request.setAttribute("PwdError","Your original password error!");
				return mapping.findForward("goSecretaryProfileUi");
			}
		}else if(role.equals("teacher")){
			Teacher teacher = (Teacher)request.getSession().getAttribute("teacherinfo");
			if (oldPwd.equals(teacher.getPassword())) {
				if (oldPwd.equals(newPwd)) {
					request.setAttribute(
							"PwdError",
							"Your new password can't be the same as the original password. Please try again!");
					return mapping.findForward("goTeacherProfileUi");
				} else {
					UsersServiceInter usersServiceInter = new UsersServiceImp();
					if (usersServiceInter.changePwd(role, newPwd,teacher.getId() + "")) {
						request.setAttribute("msg", "Your password has changed. Please login again!");
						return mapping.findForward("goLogin");
					} else {
						request.setAttribute("PwdError","Change password error!");
						return mapping.findForward("goTeacherProfileUi");
					}
				}
			}else {
				request.setAttribute("PwdError","Your original password error!");
				return mapping.findForward("goTeacherProfileUi");
				
			}
		}else if(role.equals("ta")){
			Teachingassistant ta = (Teachingassistant)request.getSession().getAttribute("TAinfo");
			if (oldPwd.equals(ta.getPassword())) {
				if (oldPwd.equals(newPwd)) {
					request.setAttribute(
							"PwdError",
							"Your new password can't be the same as the original password. Please try again!");
					return mapping.findForward("goTaProfileUi");
				} else {
					UsersServiceInter usersServiceInter = new UsersServiceImp();
					if (usersServiceInter.changePwd(role, newPwd,ta.getId() + "")) {
						request.setAttribute("msg", "Your password has changed. Please login again!");
						return mapping.findForward("goLogin");
					} else {
						request.setAttribute("PwdError","Change password error!");
						return mapping.findForward("goTaProfileUi");
					}
				}
			}else {
				request.setAttribute("PwdError","Your original password error!");
				return mapping.findForward("goTaProfileUi");
				
			}
		}else {
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
		
	}
}