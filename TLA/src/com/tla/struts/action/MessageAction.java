/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.tla.struts.action;

import java.sql.Timestamp;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.tla.domain.Messages;
import com.tla.domain.Teacher;
import com.tla.service.imp.CourseServiceImp;
import com.tla.service.imp.MessageServiceImp;
import com.tla.service.imp.TaServiceImp;
import com.tla.service.inter.CourseServiceInter;
import com.tla.service.inter.MessageServiceInter;
import com.tla.service.inter.TaServiceInter;
import com.tla.struts.form.MessageForm;

/** 
 * MyEclipse Struts
 * Creation date: 05-25-2015
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class MessageAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward send(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if (request.getSession().getAttribute("role").equals("teacher")) {
			Teacher teacher = (Teacher) request.getSession().getAttribute("teacherinfo");
			// get data
			MessageForm messageForm = (MessageForm) form;
			
			TaServiceInter taService = new TaServiceImp();
			CourseServiceInter courseService = new CourseServiceImp();
			MessageServiceInter messageService = new MessageServiceImp();
			
			Messages message = new Messages();
			message.setTeacher(teacher);
			message.setCourse(courseService.getUniqueCourseById(messageForm.getCourseId()));
			message.setTeachingassistant(taService.getUniqueTaById(messageForm.getTaId()));
			message.setSubject(messageForm.getSubject());
			message.setContent(messageForm.getContent());
			
			Date date = new Date();       
			Timestamp datetime = new Timestamp(date.getTime());
			message.setDatetime(datetime);
			
			if(messageService.saveObject(message)){
				request.setAttribute("TellOperation", "success");
			}else{
				request.setAttribute("TellOperation", "error");
			}

			return new ActionForward("/goMainUi.do");
		} else {
			request.setAttribute("msg", "ERROR: Permission denied.");
			return mapping.findForward("goLogin");
		}
	}
}